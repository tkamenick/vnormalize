#!/usr/bin/env node
"use strict";

var co = require('co');
var colors = require('colors/safe');
var fs = require('fs');
var path = require('path');

var args = require('./args');
var ffprobe = require('./ffprobe');
var progress = require('./progress');
var stat = require('./stat');
var encoder = require('./encoder');
var subtitles = require('./subtitles');
var trash = require('./trash');

var args = args();

var script = path.basename(__filename);
var filename = args.file;
var cwd = process.cwd();

co(function*() {
  yield stat(filename);

  console.log('getting metadata');
  let metadata = yield ffprobe(filename);

  let sub_file = args.subtitle_file
  if (args.subtitles && !sub_file) {
    sub_file = yield subtitles.download(filename, args.language);
    if (sub_file) {
      console.log(`${colors.green('⇩')} ${path.relative(cwd, sub_file)}`)
    }
  }

  let progress_bar = progress(':filename :bar :percent :etas', {
    total: 1000,
    width: 40,
    incomplete: colors.bgWhite(' '),
    complete: colors.bgGreen(' ')
  });

  let new_file = yield encoder.encode_with_progress_bar(
    filename,
    metadata,
    sub_file,
    progress_bar
  );

  if (new_file) {
    let renames = yield trash([sub_file, filename]);
    for (let rename of renames) {
      console.log(`${rename.from} ${colors.green('⇨')} ${rename.to}`);
    }
  } else {
    console.log(`${path.relative(cwd, filename)} is already encoded correctly`)
  }
}).catch(function(error) {
  console.log(error);
})
